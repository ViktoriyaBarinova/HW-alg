import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        int[] arr = generateRandomArray(1000000);

        long startTime = System.nanoTime();
        bubbleSort(arr);
        long endTime = System.nanoTime();
        long bubbleSortDuration = (endTime - startTime);

        startTime = System.nanoTime();
        quickSort(arr, 0, arr.length-1);
        endTime = System.nanoTime();
        long quickSortDuration = (endTime - startTime);

        startTime = System.nanoTime();
        Arrays.sort(arr);
        endTime = System.nanoTime();
        long arraysSortDuration = (endTime - startTime);

        System.out.println("Bubble sort duration: " + bubbleSortDuration + " nanoseconds");
        System.out.println("Quick sort duration: " + quickSortDuration + " nanoseconds");
        System.out.println("Arrays.sort() duration: " + arraysSortDuration + " nanoseconds");
    }

    public static void bubbleSort(int[] arr) {
        int n = arr.length;
        for (int i = 0; i < n-1; i++)
            for (int j = 0; j < n-i-1; j++)
                if (arr[j] > arr[j+1])
                {
                    int temp = arr[j];
                    arr[j] = arr[j+1];
                    arr[j+1] = temp;
                }
    }

    public static void quickSort(int[] arr, int begin, int end) {
        if (begin < end) {
            int partitionIndex = partition(arr, begin, end);

            quickSort(arr, begin, partitionIndex-1);
            quickSort(arr, partitionIndex+1, end);
        }
    }

    private static int partition(int[] arr, int begin, int end) {
        int pivot = arr[end];
        int i = (begin-1);

        for (int j = begin; j < end; j++) {
            if (arr[j] <= pivot) {
                i++;

                int swapTemp = arr[i];
                arr[i] = arr[j];
                arr[j] = swapTemp;
            }
        }

        int swapTemp = arr[i+1];
        arr[i+1] = arr[end];
        arr[end] = swapTemp;

        return i+1;
    }

    public static int[] generateRandomArray(int size) {
        int[] arr = new int[size];
        for (int i = 0; i < size; i++) {
            arr[i] = (int)(Math.random() * 1000000);
        }
        return arr;
    }
}
